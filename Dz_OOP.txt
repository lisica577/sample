	Предположим, будет разрабатываться приложение, которое будет помогать пользователю проверить автомобиль на предмет "чистоты" по различным базам (ГИБДД, ФССП и.т.д)
Какие же принципы ООП будут нами использоваться и на каких этапах?

	1. Принцип абстракций.
Мы будем искать информацию о конкретном автомобиле по уникальному номеру (ViN), госгомеру, марке авто. Это важные параметры. Остальные параметры типа потребление бензина, наличие кондиционера, цвет салона и прочее тут не будет использоваться
	2. Ограничение доступа. Инкапсуляция. Пользователь будет видеть только стандартный интерфейс, не будет знать как осуществляется поиск той или иной информации об интересующем авто. То есть как наш модуль обращается к различным базам данных, в каких то запрос проходит напрямую, где-то необходимо скачивать файлы с базами данных и в них совершать поиск отдельно - все это пользователь не видит. 
	3.Полиморфизм (многообразие).
Интерфейс стандартный, данные вводятся в одни и те же поля независимо от типа авто, будь то седан бизнес класса или военный внедорожник. Также независимо от этого он ищется во всех возможных базах.
	4.Наследование.
У нас есть базовый класс - общий интерфейс всех баз и есть наследники - реализация поиска через множество частных баз данных (ГИБДД, ФССП и пр.)
	5. Параллелизм.
Наш авто одновременно проверяется несколькими базами.
	6. Устойчивость.
У нас временные объекты хранят информацию о кратковременных запросах до момента когда все объединится в общий. Т.е например база ФССП дала ответ что в базе нет такого vin, соответственно по этой базе авто "чист", а база ГИБДД дала ответ что авто находится в розыске.

Принципы ООП, которые использовались в моей работе (немного теории, на основе которой описывались используемые в работе принципы):
	1. Принцип абстракций.
Абстракция – совокупность существенных характеристик некоторого объекта, которые отличают его от всех других видов объектов и, таким образом, четко определяют особенности данного объекта с точки зрения дальнейшего рассмотрения и анализа.
	2. Ограничение доступа – сокрытие отдельных элементов реализации абстракции, не затрагивающих существенных характеристик ее как целого. Инкапсуляция.
	3.Полиморфизм (многообразие) – это свойство системы использовать объекты с одинаковым интерфейсом без информации о типе и внутренней структуре объекта.
	4.Один из важнейших механизмов ООП – наследование свойств в иерархии общее/частное. Наследование – такое соотношение между абстракциями, когда одна из них использует структурную или часть другой или нескольких других абстракций (соответственно простое и множественное наследование).
	5. Параллелизм – свойство нескольких абстракций одновременно находиться в активном состоянии, т.е. выполнять некоторые операции.
Существует целый ряд задач, решение которых требует одновременного выполнения некоторых последовательностей действий. К таким задачам, например, относятся задачи автоматического управления несколькими процессами.
	6. Устойчивость – свойство абстракции существовать во времени независимо от процесса, породившего данный программный объект, и/или в пространстве, перемещаясь из адресного пространства, в котором он был создан.
Различают:
временные объекты, хранящие промежуточные результаты некоторых действий, например, вычислений;
локальные объекты, существующие внутри подпрограмм, время жизни которых исчисляется от вызова подпрограммы до ее завершения;
глобальные объекты, существующие пока программа загружена в память;
сохраняемые объекты, данные которых хранятся в файлах внешней памяти между сеансами работы программы.